{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{255:function(t,s,a){\"use strict\";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[a(\"p\",[t._v(\"[일일코딩 #32] Two Sum\")]),t._m(0),a(\"p\",[a(\"a\",{attrs:{href:\"https://leetcode.com/problems/two-sum/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"링크\"),a(\"OutboundLink\")],1),t._v(\"\\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\")]),a(\"p\",[t._v(\"You may assume that each input would have exactly one solution, and you may not use the same element twice.\")]),a(\"p\",[t._v(\"Example:\\nGiven nums = [2, 7, 11, 15], target = 9,\")]),a(\"p\",[t._v(\"Because nums[0] + nums[1] = 2 + 7 = 9,\\nreturn [0, 1].\")]),t._m(1),t._m(2),t._m(3),t._m(4),a(\"p\",[t._v(\"3가지 방법을 제시함.\")]),t._m(5)])},[function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"question\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#question\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Question\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"my-answer\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#my-answer\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" My Answer\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"twoSum\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" target\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" lastIdx \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"lastIndexOf\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"target \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"if\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lastIdx \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" lastIdx\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"lastIndexOf로 풀었다. 처음엔 Array 초기화 할 때 \"),s(\"code\",[this._v(\"var answerArr = []\")]),this._v(\"로 해서 \"),s(\"code\",[this._v(\"answerArr.push(a, b)\")]),this._v(\"로 넣었는데 코드 줄인다고 위처럼 바꿨더니 성능이 조금 더 줄었다. 변수 할당보다 new Array 로 하는게 더 오래걸리나보다.\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"other-s-answer\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#other-s-answer\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Other's answer\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"ol\",[s(\"li\",[this._v(\"브루트 포스: 포문 2번 돌면서 뺀 값이 있나 찾기\")]),s(\"li\",[this._v(\"Two pass hash table: 잘 이해 안감 왜 굳이?\")]),s(\"li\",[this._v(\"One-pass hash table: 내가 푼 방법. 뺀 값이 map에 있나 확인\")])])}],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}