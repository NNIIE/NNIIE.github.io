{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{348:function(t,n,e){\"use strict\";e.r(n);var s=e(0),a=Object(s.a)({},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"div\",{staticClass:\"content\"},[t._m(0),t._m(1),t._m(2),e(\"ul\",[e(\"li\",[t._v(\"pyenv: 로컬에 다양한 파이썬 버전 설치\")]),e(\"li\",[t._v(\"virtualenv: 로컬에 다양한 파이썬 환경 구축. 패키지 의존성 해결\")]),e(\"li\",[t._v(\"autoenv: 프로젝트 폴더 들어갈때마다 자동으로 개발환경 세팅됨.\\n\"),e(\"a\",{attrs:{href:\"https://dobest.io/how-to-set-python-dev-env/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"참고 링크\"),e(\"OutboundLink\")],1)])]),t._m(3),t._m(4),t._m(5),e(\"p\",[t._v(\"xcode command line tools를 설치한다. \"),e(\"a\",{attrs:{href:\"https://developer.apple.com/downloads/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"링크\"),e(\"OutboundLink\")],1),t._v(\"\\n그래도 안되면 \"),e(\"a\",{attrs:{href:\"https://github.com/yyuu/pyenv/wiki/Common-build-problems#build-failed-error-the-python-zlib-extension-was-not-compiled-missing-the-zlib\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"여기\"),e(\"OutboundLink\")],1),t._v(\" 참고\")]),t._m(6),t._m(7),t._m(8),e(\"p\",[t._v(\"이렇게 하면 된다. \"),e(\"a\",{attrs:{href:\"https://stackoverflow.com/questions/36356778/how-to-let-pyenv-to-find-installed-python-versions\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"참고\"),e(\"OutboundLink\")],1)]),t._m(9),t._m(10),t._m(11),t._m(12),e(\"p\",[e(\"a\",{attrs:{href:\"https://dobest.io/how-to-set-python-dev-env/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"pyenv + virtualenv + autoenv 를 통한 Python 개발 환경 구축하기 by @dobestan\"),e(\"OutboundLink\")],1)])])},[function(){var t=this.$createElement,n=this._self._c||t;return n(\"h1\",{attrs:{id:\"파이썬-개발환경-세팅하기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#파이썬-개발환경-세팅하기\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 파이썬 개발환경 세팅하기\")])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"h2\",{attrs:{id:\"개괄\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#개괄\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 개괄\")])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"p\",[this._v(\"수많은 프로젝트와, 그 프로젝트 별 버전관리 그리고 패키지들의 의존성 관리를 위해\\n\"),n(\"code\",[this._v(\"pyenv\")]),this._v(\"와 \"),n(\"code\",[this._v(\"virtualenv\")]),this._v(\", 그리고 \"),n(\"code\",[this._v(\"autoenv\")]),this._v(\"를 설치한다.\")])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"h2\",{attrs:{id:\"pyenv\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pyenv\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" pyenv\")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"div\",{staticClass:\"language-shell extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[e(\"code\",[t._v(\"brew update\\nbrew \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" pyenv\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# bash_profile에 추가. 나는 zsh라 ~/.zshrc에 추가하였다.\")]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"echo\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'eval \\\"\"),e(\"span\",{attrs:{class:\"token variable\"}},[e(\"span\",{attrs:{class:\"token variable\"}},[t._v(\"$(\")]),t._v(\"pyenv init -\"),e(\"span\",{attrs:{class:\"token variable\"}},[t._v(\")\")])]),t._v(\"\\\"'\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\">>\")]),t._v(\" ~/.bash_profile  \\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# pyenv 사용하기. 현재 설치한 버전들이 다 나온다.\")]),t._v(\"\\npyenv version\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"#설치할 수 있는 파이썬 리스트를 보여주고, 거기서 골라서 설치\")]),t._v(\"\\npyenv \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" -list\\npyenv \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" 2.7.10\\npython -version \"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"#버전확인\")]),t._v(\"\\npyenv global 2.7.10 \"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"#설치한 파이썬 버전 사용\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"h3\",{attrs:{id:\"build-failed-error-the-python-zlib-extension-was-not-compiled-missing-the-zlib-이-뜬다면\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#build-failed-error-the-python-zlib-extension-was-not-compiled-missing-the-zlib-이-뜬다면\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(' Build failed: \"ERROR: The Python zlib extension was not compiled. Missing the zlib?\" 이 뜬다면')])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"h2\",{attrs:{id:\"virtualenv\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#virtualenv\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" virtualenv\")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"div\",{staticClass:\"language-shell extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[e(\"code\",[t._v(\"brew \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" pyenv-virtualenv\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# pyenv init 안했으면 위에것도 bash_profile이나 zshrc에 추가해준다. \")]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"eval\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"'),e(\"span\",{attrs:{class:\"token variable\"}},[e(\"span\",{attrs:{class:\"token variable\"}},[t._v(\"$(\")]),t._v(\"pyenv init -\"),e(\"span\",{attrs:{class:\"token variable\"}},[t._v(\")\")])]),t._v('\"')]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"eval\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v('\"'),e(\"span\",{attrs:{class:\"token variable\"}},[e(\"span\",{attrs:{class:\"token variable\"}},[t._v(\"$(\")]),t._v(\"pyenv virtualenv-init -\"),e(\"span\",{attrs:{class:\"token variable\"}},[t._v(\")\")])]),t._v('\"')]),t._v(\"\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# 2.7.10을 사용한 pinkfong-tv라는 프로젝트 만들기\")]),t._v(\"\\npyenv virtualenv 2.7.10 pinkfong-tv\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# 만든 이름으로 activate하기\")]),t._v(\"\\npyenv activate pinkfong-tv\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# install된 패키지들을 보여주거나 파일로 저장\")]),t._v(\"\\npip freeze \\npip freeze \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" requirement.txt \\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# 새로운 환경에서 패키지들을 재설치\")]),t._v(\"\\npip \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" -r requirement.txt\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# django 설치하기\")]),t._v(\"\\npip \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" django\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# pip upgrade\")]),t._v(\"\\npip \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" --upgrade pip\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# deactivate하기\")]),t._v(\"\\npyenv deactivate\\n\")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"h2\",{attrs:{id:\"the-django-admin-command-exists-in-these-python-versions-란-에러가-나면\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#the-django-admin-command-exists-in-these-python-versions-란-에러가-나면\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" The `django-admin' command exists in these Python versions: 란 에러가 나면?\")])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"div\",{staticClass:\"language-shell extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[n(\"code\",[this._v(\"pyenv global 2.7.10\\n\"),n(\"span\",{attrs:{class:\"token comment\"}},[this._v(\"# pyenv’s name for the Python 2.7.10 interpreter version is just 2.7.10, not \")]),this._v(\"\\n\"),n(\"span\",{attrs:{class:\"token comment\"}},[this._v(\"# python2.7.10. You can get a list of all your installed versions with:\")]),this._v(\"\\npyenv versions\\n\")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"h2\",{attrs:{id:\"autoenv\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#autoenv\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" autoenv\")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"div\",{staticClass:\"language-shell extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[e(\"code\",[t._v(\"brew \"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"install\")]),t._v(\" autoenv\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# zshrc에 매 세션마다 autoenv자동실행 코드 삽입\")]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"echo\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'source /usr/local/opt/autoenv/activate.sh'\")]),t._v(\" \"),e(\"span\",{attrs:{class:\"token operator\"}},[t._v(\">>\")]),t._v(\" ~/.zshrc\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# 프로젝트 폴더로 들어가서, .env파일 만들기\")]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"vi\")]),t._v(\" .env\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# .env에는 activate하고 싶은 virtualenv명을 적는다.\")]),t._v(\"\\npyenv activate pinkfong-tv\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# 이건 깃에 올릴 필요가 없으니, global gitignore을 만든다\")]),t._v(\"\\n\"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"touch\")]),t._v(\" ~/.gitignore\\n\"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" config --global core.excludesfile ~/.gitignore\\n\"),e(\"span\",{attrs:{class:\"token function\"}},[t._v(\"vi\")]),t._v(\" ~/.gitignore\\n\\n\"),e(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"# .gitignore에 제외하고 싶은 .env를 써준다.\")]),t._v(\"\\n.env\\n\")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n(\"h2\",{attrs:{id:\"refer\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#refer\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Refer\")])}],!1,null,null,null);n.default=a.exports}}]);","extractedComments":[]}