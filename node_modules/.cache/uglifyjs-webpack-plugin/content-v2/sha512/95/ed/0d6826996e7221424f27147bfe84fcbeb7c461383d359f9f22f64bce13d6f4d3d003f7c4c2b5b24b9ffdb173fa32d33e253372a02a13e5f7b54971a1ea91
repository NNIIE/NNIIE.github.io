{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{317:function(t,a,s){\"use strict\";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"div\",{staticClass:\"content\"},[t._m(0),s(\"p\",[t._v(\"자바스크립트에 함수의 매개변수를 설명할 때 일반적으로 얘기하는 값으로 전달(Call by Value) 또는 참조로 전달(Call by Reference) 방식으로는 이해하기 힘들다. 아래 코드를 보자.\")]),t._m(1),s(\"p\",[t._v(\"실행결과는 아래와 같다.\")]),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"http://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Evaluation strategy - Wikipedia\"),s(\"OutboundLink\")],1)]),s(\"li\",[s(\"a\",{attrs:{href:\"http://stackoverflow.com/questions/518000/is-javascript-a-pass-by-reference-or-pass-by-value-language\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Is JavaScript a pass-by-reference or pass-by-value language?\"),s(\"OutboundLink\")],1)])])])},[function(){var t=this.$createElement,a=this._self._c||t;return a(\"h1\",{attrs:{id:\"call-by-sharing\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#call-by-sharing\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Call by Sharing\")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"change\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"num\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" obj1\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" obj2\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  num \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" num \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"10\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  obj1\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"item \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"changed\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  obj2 \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"item\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"changed\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" num \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"10\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" obj1 \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"item\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"unchanged\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" obj2 \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"item\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v('\"unchanged\"')]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"change\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"num\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" obj1\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" obj2\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\nconsole\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"num\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj1\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"item\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj2\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"item\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[this._v(\"10\\nchanged\\nunchanged\\n\")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a(\"p\",[this._v(\"값으로 전달하는 방식이라면 \"),a(\"code\",[this._v(\"obj1.item\")]),this._v(\" 값이 변해서는 안 되고, 참조로 전달하는 방식이라면 \"),a(\"code\",[this._v(\"obj2.item\")]),this._v(\" 값이 변해야 하지만 두 방식 모두 만족하지 못한다. Call by Sharing 방식으로 설명할 수 있고 자바 진영에서는 Pass by Value, 루비 진영에서는 Pass by Reference 라고도 한다. 참조로 전달하는 방식과 차이점은 함수 안에서 인자를 새로 할당했을 때 호출한 곳에서 접근할 수 없다는 점이다.\")])},function(){var t=this.$createElement,a=this._self._c||t;return a(\"h2\",{attrs:{id:\"결론\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#결론\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 결론\")])},function(){var t=this.$createElement,a=this._self._c||t;return a(\"ul\",[a(\"li\",[this._v(\"함수에 문자열, 숫자 등의 기본 형태의 인자를 넘기면 값을 복사한 지역 변수로 사용한다.\")]),a(\"li\",[this._v(\"함수에 객체 형태의 인자를 넘기면 속성은 공유하지만 새로 객체를 할당할 수는 없다.\")])])},function(){var t=this.$createElement,a=this._self._c||t;return a(\"h2\",{attrs:{id:\"참고\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#참고\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 참고\")])}],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}