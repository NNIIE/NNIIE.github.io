{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{332:function(t,s,a){\"use strict\";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[a(\"h1\",{attrs:{id:\"함수형-프로그래밍\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#함수형-프로그래밍\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 함수형 프로그래밍\")]),a(\"h2\",{attrs:{id:\"함수형-프로그래밍이란\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#함수형-프로그래밍이란\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 함수형 프로그래밍이란?\")]),a(\"ul\",[a(\"li\",[t._v(\"순수한 함수. 외부의 값에 접근하지 않아야 한다. 인자만 가지고 조물조물. 공유된 상태와 변경 가능한 데이터 및 부작용을 피하여 소프트웨어를 작성하는 프로세스.\")]),a(\"li\",[t._v(\"애플리케이션의 상태가 공유되는 OOP랑은 대조된다.\")])]),a(\"h2\",{attrs:{id:\"high-order-functions-hoc-고차-함수\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#high-order-functions-hoc-고차-함수\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" High Order Functions(HOC, 고차 함수)\")]),a(\"ul\",[a(\"li\",[t._v(\"다른 함수를 인자로 사용하거나 함수를 반환하는 함수. (또는 둘 다)\")]),a(\"li\",[t._v(\"사용 예시\\n\"),a(\"ul\",[a(\"li\",[t._v(\"비동기 등 제어를 추상화한다 (콜백함수, promise 등을 사용)\")]),a(\"li\",[t._v(\"다양한 데이터 유형에 대해 작동할 수 있는 유틸리티를 생성\")])])])]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" numbers \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"isEven\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"!\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"%\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// '배열'을 처리하는 로직이 필요 없으며, 배열을 순환하며 재사용된다.\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" evenNumbers \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" numbers\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"filter\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"isEven\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\")])])]),a(\"h2\",{attrs:{id:\"currying-커링\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#currying-커링\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Currying (커링)\")]),a(\"p\",[t._v(\"여러 인자를 받는 함수에서 인자를 각각 하나씩 사용하여 함수 순서를 변환.\\n람다 표현식과 클로저로 구현.\")]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Not curried function\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"sumOfThree\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" y\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" z\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" y \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" z\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Curried function\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"sumOfThreeNew\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"y\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"z\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" y \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" z\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"sumOfThreeNew\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 6\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 간단 표기\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"SumOfThreeSimple\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" y \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" z \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" y \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" z\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\")])])]),a(\"h2\",{attrs:{id:\"auto-currying\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#auto-currying\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Auto-currying\")]),a(\"p\",[t._v(\"lodash와 Ramda는 \"),a(\"code\",[t._v(\"curry\")]),t._v(\"메소드를 가지고 있다. 이는 여러개의 인수를 가지는 함수를 커링된 함수로 만들어줌.\")]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// Use lodash or ramda\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" curry \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" _\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"curry \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token constant\"}},[t._v(\"R\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"curry\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"add\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" y\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" y\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" curriedAdd \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"curry\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"add\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"curriedAdd\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 3\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"curriedAdd\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// (y) => 1+ y\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"curriedAdd\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 3\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"function-composition-합성함수\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#function-composition-합성함수\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Function composition (합성함수)\")]),a(\"p\",[t._v(\"두 가지 이상의 함수가 합성됨.\\n두 함수 f와 g가 있고 \"),a(\"code\",[t._v(\"f(g(x))\")]),t._v(\"와 같이 사용된다 할 때, 이를 \"),a(\"code\",[t._v(\"f ∘ g(x)\")]),t._v(\"와 같이 표현 가능.\\n아이고 헷갈려.\")]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"compose\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"f\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" g\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"f\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"g\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// simple version\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// const compose = (f, g) => x => f(g(x));\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"add\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" y \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" y\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"pow\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" x \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" y \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" y \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"**\")]),t._v(\" x\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" addTwo \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"add\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// (y) => y + 2\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" square \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"pow\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// (y) => y ** 2\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" addTwoThenSquare \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"compose\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"square\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" addTwo\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"addTwoThenSquare\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token number\"}},[t._v(\"10\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// (10 + 2) ^ 2\")]),t._v(\"\\n\"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 인자에 2를 더하는 addTwo함수의 결과를 인자를 제곱하는 square함수\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"point-free-notation\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#point-free-notation\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Point free notation\")]),a(\"p\",[t._v(\"함수를 작성할 때 매게변수를 정의하지 않는 것. 함수를 간결하게 해준다.\")]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" map \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" fn \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" list \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" list\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"map\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fn\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"refer\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#refer\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Refer\")]),a(\"ul\",[a(\"li\",[t._v(\"https://wonism.github.io/what-is-fp/\")]),a(\"li\",[t._v(\"https://flaviocopes.com/javascript-functional-programming/\")])])])}],!1,null,null,null);s.default=o.exports}}]);","extractedComments":[]}