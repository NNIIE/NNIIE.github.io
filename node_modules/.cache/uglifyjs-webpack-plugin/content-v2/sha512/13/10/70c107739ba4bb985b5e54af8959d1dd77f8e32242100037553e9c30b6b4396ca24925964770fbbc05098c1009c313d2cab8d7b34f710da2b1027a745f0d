{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{168:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"content\"},[n(\"h1\",{attrs:{id:\"daily-codewars-30\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#daily-codewars-30\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Daily Codewars #30\")]),n(\"h2\",{attrs:{id:\"question\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#question\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Question\")]),n(\"p\",[e._v(\"http://www.codewars.com/kata/5286a298f8fc1b7667000c1c/train/javascript\\nGoal\")]),n(\"p\",[e._v(\"The goal is to count the number of words, chars and lines in a block of text. [Pretty much like the wc command].\")]),n(\"p\",[e._v(\"Fill the parse method so that the 3 counters (wordCount, charCount & lineCount) are properly setted in the DocumentParser object.\")]),n(\"p\",[e._v(\"Helper\")]),n(\"p\",[e._v(\"In order to handle large blocks of text, you do not receive any string in the constructor or in the parse method.\")]),n(\"p\",[e._v(\"Instead, you receive a Reader instance as a parameter of your DocumentParser constructor.\")]),n(\"p\",[e._v(\"This reader expose only one method : getChunk()\")]),n(\"p\",[e._v(\"Returns the following fragment of text from the file it is reading\\nReturns a string of random size\\nReturns at least one char\\nReturns an empty string when finished\\nConstraints\")]),n(\"p\",[e._v(\"You have to call getChunk as many times as needed to fully read the file.\\nYou cannot concatenete calls to getChunk: to simulate limited memory, each chunk must be parsed individually.\\nRegex are not allowed.\\nTechnical note: This is to simulate the processing of every kind of file, especially huge files that cannot fits into memory.\")]),n(\"p\",[e._v(\"Word boundaries\")]),n(\"p\",[e._v(\"What is a word ? Keep it simple :\")]),n(\"p\",[e._v('Words are separated with one or more space character(s), examples:\\n\"Hello world\" is 2 words\\n\"Hello   world\" is 2 words\\n\"mother-in-law\" is 1 word\\nLines are separated with \"\\\\n\"\\nControl character \\\\n should be ignored in the character count\\nPunctuation is correctly located: no need to parse punctuation\\nExamples')]),n(\"p\",[e._v('\"Hello World\"')]),n(\"p\",[e._v('Chars: 11\\nWords: 2\\nLines: 1\\n\"Is it me, or you?\"')]),n(\"p\",[e._v('Chars: 17\\nWords: 5\\nLines: 1\\n\"You can try, but you\\'ll never catch me.\\\\nBazinga!\"')]),n(\"p\",[e._v(\"Chars: 47\\nWords: 9 (you'll = 1 word)\\nLines: 2\")])])}],!1,null,null,null);t.default=o.exports}}]);","extractedComments":[]}